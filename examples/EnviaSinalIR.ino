#include <IRremote.h>

//SPRINGER AC ON SIGNAL
const unsigned int AC_irSignal1[] PROGMEM = {9032, 4476, 580, 572, 556, 600, 556, 576, 576, 1648, 560, 1648, 580, 572, 556, 600, 556, 596, 556, 576, 576, 576, 556, 600, 552, 1648,
  556, 600, 556, 600, 556, 572, 552, 600, 556, 600, 556, 596, 556, 1648, 556, 600, 556, 572, 580, 576, 556, 596, 556, 576, 580, 572, 576, 576, 560, 596, 556, 572, 580, 1648, 560,
  572, 580, 1648, 556, 1672, 560, 572, 580, 572, 556, 600, 556, 596, 556, 576, 552, 600, 556, 576, 576, 576, 580, 572, 556, 1652, 580, 572, 552, 604, 552, 1652, 580, 1648, 556, 596,
  556, 576, 576, 10100, 8980, 4504, 556, 1672, 560, 572, 580, 576, 552, 600, 556, 576, 576, 576, 552, 1652, 580, 576, 576, 1648, 560, 1648, 580, 1648, 556, 596, 560, 572, 580, 1648,
  556, 600, 556, 576, 576, 576, 552, 600, 556, 576, 576, 1648, 556, 600, 556, 576, 576, 576, 556, 600, 552, 600, 556, 572, 556, 600, 556, 596, 556, 576, 552, 600, 556, 596, 556, 576,
  580, 572, 556, 600, 556, 576, 576, 1648, 556, 1648, 584, 572, 552, 604, 552, 600, 556, 576, 576, 576, 552, 600, 556, 576, 580, 572, 552, 604, 552, 580, 576, 572, 556};

//GREE AC ON SIGNAL
//const unsigned int AC_irSignal1[] PROGMEM = {8984, 4492, 616, 576, 616, 580, 608, 584, 608, 604, 588, 604, 588, 604, 612, 580, 584, 604, 588, 1692, 612, 604, 612, 580, 612, 1692, 612,
//604, 588, 604, 612, 580, 584, 608, 584, 608, 584, 608, 560, 628, 564, 628, 560, 632, 560, 632, 560, 604, 588, 604, 612, 580, 588, 604, 588, 600, 588, 604, 612, 1692, 612, 608, 584, 1692,
//636, 580, 588, 604, 588, 1692, 612, 604, 612};

//EPSON PROJECTOR ON SIGNAL
//const unsigned int AC_irSignal1[] PROGMEM = {696, 38116, 8976, 4448, 560, 1684, 560, 1680, 560, 572, 536, 572, 536, 572, 532, 576, 556, 552, 532, 1684, 560, 1684, 556, 576, 532, 1684,
//580, 552, 532, 1684, 560, 576, 532, 1680, 560, 576, 532, 552, 580, 528, 556, 552, 556, 552, 580, 1660, 556, 552, 556, 552, 556, 1684, 584, 1656, 584, 1660, 584, 1656, 584, 1660, 556,
//552, 556, 1684, 584, 1660, 556, 552, 556, 41436, 7952, 38164, 2804, 38044, 8952, 4476, 556, 1684, 560, 1684, 580, 552, 556, 552, 556, 552, 532, 576, 556, 552, 556, 1660, 580, 1660, 584,
//552, 532, 1684, 580, 552, 556, 1660, 556, 576, 556, 1660, 560, 576, 556, 552, 532, 572, 556, 556, 552, 552, 556, 1660, 560, 576, 532, 576, 532, 1684, 556, 1684, 556, 1684, 584, 1660, 556,
//1684, 560, 576, 556, 1656, 584, 1660, 580, 552, 532};

//SAMSUNG AC ON SIGNAL
//const unsigned int AC_irSignal1[] PROGMEM = {544, 17924, 2972, 9004, 488, 512, 484, 1508, 488, 536, 460, 516, 484, 536, 460, 540, 460, 536, 460, 540, 484, 512, 484, 1512, 488, 508, 488,
//  512, 488, 1504, 492, 508, 488, 512, 484, 1508, 488, 1508, 488, 1508, 488, 1532, 464, 1532, 464, 560, 460, 540, 460, 536, 464, 512, 484, 512, 488, 512, 484, 512, 488, 508, 488, 512,
//  488, 508, 488, 536, 464, 532, 464, 536, 460, 540, 460, 536, 460, 544, 456, 536, 460, 540, 460, 560, 460, 512, 488, 512, 488, 512, 484, 512, 488, 512, 484, 516, 484, 512, 484, 512, 488,
//  508, 488, 512, 484, 540, 460, 536, 460, 536, 464, 1532, 464, 1532, 460, 1536, 484, 1512, 488, 2992, 3020, 8976, 512, 1484, 512, 512, 484, 516, 484, 512, 484, 516, 484, 512, 484, 516,
//  484, 512, 484, 516, 484, 1512, 484, 536, 460, 540, 456, 1512, 488, 516, 480, 1512, 484, 1512, 508, 1484, 488, 1508, 488, 1508, 488, 1508, 488, 536, 460, 536, 460, 564, 460, 540, 456,
//  540, 460, 540, 456, 540, 460, 540, 460, 536, 484, 516, 484, 512, 484, 516, 484, 512, 484, 512, 488, 512, 484, 512, 484, 516, 484, 512, 484, 516, 484, 512, 484, 540, 460, 540, 456, 540,
//  460, 540, 460, 540, 456, 540, 460, 536, 460, 540, 484, 512, 484, 512, 488, 512, 484, 516, 484, 512, 484, 512, 488, 512, 484, 512, 484, 2996, 2996, 9000, 488, 1512, 484, 540, 456, 540,
//  460, 540, 456, 540, 460, 540, 484, 512, 484, 512, 488, 512, 484, 1484, 512, 512, 488, 512, 484, 1488, 508, 1508, 488, 512, 484, 1512, 484, 540, 456, 1512, 488, 1508, 488, 1508, 512,
//  1484, 512, 1484, 512, 1484, 512, 1484, 508, 1488, 508, 516, 484, 512, 484, 512, 488, 1508, 488, 1508, 488, 1508, 488, 536, 460, 540, 484, 512, 488, 508, 488, 512, 484, 1484, 512, 1484,
//  512, 1488, 508, 512, 484, 1488, 508, 540, 460, 1508, 488, 540, 456, 1512, 484, 540, 460, 536, 484, 516, 484, 512, 484, 512, 488, 512, 484, 512, 488, 1484, 512, 1508, 484, 1512, 484,
//  1512, 488};

//CONSUL AC ON SIGNAL
//const unsigned int AC_irSignal1[] PROGMEM = {8980, 4520, 584, 1668, 584, 1668, 584, 548, 584, 556, 580, 560, 580, 564, 580, 564, 584, 1676, 584, 544, 584, 1668, 584, 1672, 584, 552,
//  584, 556, 584, 564, 580, 564, 584, 556, 584, 544, 580, 548, 592, 1664, 584, 556, 584, 556, 584, 560, 584, 564, 584, 556, 584, 544, 584, 1668, 584, 552, 584, 576, 560, 584, 556, 1684,
//  584, 1688, 584, 580, 556, 568, 560, 572, 556, 580, 556, 580, 556, 584, 556, 588, 532, 616, 556, 584, 556, 568, 536, 596, 532, 604, 556, 580, 556, 584, 536, 608, 536, 612, 536, 584,
//  536, 8024, 556, 572, 556, 572, 556, 580, 556, 580, 532, 608, 556, 588, 556, 592, 532, 1704, 556, 596, 556, 572, 532, 604, 532, 604, 556, 584, 560, 584, 560, 592, 556, 580, 532, 592,
//  556, 576, 556, 576, 536, 604, 532, 608, 532, 612, 532, 616, 556, 580, 556, 572, 556, 576, 556, 576, 532, 604, 556, 588, 556, 588, 532, 612, 532, 608, 556, 568, 556, 576, 556, 576,
//  556, 580, 536, 604, 532, 616, 552, 592, 556, 584, 552, 572, 532, 600, 552, 580, 556, 580, 556, 584, 560, 588, 556, 588, 556, 584, 532, 592, 532, 600, 532, 600, 556, 580, 532, 608,
//  556, 588, 556, 592, 556, 580, 556, 568, 556, 1672, 580, 1676, 556, 608, 556, 584, 556, 1684, 556, 1716, 580, 1660, 556, 7996, 580, 572, 532, 596, 532, 604, 552, 584, 556, 584, 532,
//  612, 556, 588, 532, 608, 532, 1692, 556, 596, 532, 604, 556, 580, 532, 608, 532, 612, 532, 616, 532, 608, 556, 568, 556, 576, 556, 580, 556, 580, 556, 584, 532, 612, 556, 592, 532,
//  608, 556, 568, 536, 596, 560, 576, 556, 580, 556, 584, 532, 612, 556, 592, 532, 608, 532, 596, 556, 572, 556, 580, 532, 604, 556, 1684, 556, 1708, 556, 616, 556, 584, 532, 592, 532,
//  600, 532, 600, 556, 584, 532, 608, 556, 588, 532, 616, 532, 604, 532, 1692, 556, 600, 556, 576, 556, 580, 556, 1688, 556, 1708, 560, 612, 536, 584, 560};

//PHILIPS TV
//const unsigned int AC_irSignal1[] PROGMEM = {2628, 912, 416, 912, 420, 496, 392, 496, 392, 900, 860, 504, 392, 496, 392, 496, 392, 496, 392, 496, 392, 496, 392, 496, 392, 496, 392, 496,
//  392, 496, 392, 496, 392, 496, 836, 496, 392, 912, 420, 496, 392, 17524, 2632, 908, 416, 916, 416, 496, 392, 500, 388, 900, 864, 500, 392, 476, 412, 472, 416, 472, 416, 472, 416, 472,
//  416, 472, 416, 472, 416, 472, 416, 496, 392, 496, 392, 496, 836, 496, 416, 892, 440, 472, 412};

IRsend irsend;

char PIN_BUTTON = 51;

void sendRAW_Flash(const unsigned int * signalArray, unsigned int signalLength, unsigned char carrierFreq) {
  irsend.enableIROut(carrierFreq); //Inicia a freq. da portadora para cada sinal a ser enviado

  for(unsigned int i = 0; i < signalLength; i++) {
    if (i & 1)
      irsend.space(pgm_read_word_near(&signalArray[i]));
    else
      irsend.mark(pgm_read_word_near(&signalArray[i]));  
  }
  irsend.space(1);
}

void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200); 
  pinMode(PIN_BUTTON, INPUT);
}

void loop() {
  unsigned int botao1 = digitalRead(PIN_BUTTON);
  if (botao1) {
      Serial.print("Starting IR transmission: ");
      Serial.println(micros());
      sendRAW_Flash(AC_irSignal1, sizeof(AC_irSignal1), 38);
      Serial.print("End of IR transmission: ");
      Serial.println(micros());
      delay(500);
  }
}
